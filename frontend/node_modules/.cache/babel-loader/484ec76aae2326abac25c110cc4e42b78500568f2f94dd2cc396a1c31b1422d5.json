{"ast":null,"code":"var _jsxFileName = \"/Users/florianrunkel/Documents/02_Uni/04_Masterarbeit/masterthesis/frontend/src/components/candidates/LinkedInInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ProfileDisplay from './ProfileDisplay';\nimport PredictionResult from './PredictionResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LinkedInInput = () => {\n  _s();\n  const [linkedinUrl, setLinkedinUrl] = useState('');\n  const [profile, setProfile] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleAnalyze = async () => {\n    setLoading(true);\n    try {\n      // 1. Profil scrapen\n      const profileResponse = await fetch('/scrape-linkedin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url: linkedinUrl\n        })\n      });\n      const profileData = await profileResponse.json();\n      setProfile(profileData);\n\n      // 2. Vorhersage erstellen\n      const predictionResponse = await fetch('/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          experiences: profileData.experience,\n          modelType: 'tft'\n        })\n      });\n      const predictionData = await predictionResponse.json();\n      setPrediction(predictionData);\n    } catch (error) {\n      console.error('Fehler bei der Analyse:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"linkedin-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        value: linkedinUrl,\n        onChange: e => setLinkedinUrl(e.target.value),\n        placeholder: \"https://www.linkedin.com/in/beispiel-profil\",\n        className: \"linkedin-input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnalyze,\n        className: \"btn-primary\",\n        disabled: !linkedinUrl,\n        children: \"Profil analysieren\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-container-prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }, this), profile && /*#__PURE__*/_jsxDEV(ProfileDisplay, {\n      profile: profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), prediction && /*#__PURE__*/_jsxDEV(PredictionResult, {\n      prediction: prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(LinkedInInput, \"dZOCzk6BBDfL34MEdtQYviCVufY=\");\n_c = LinkedInInput;\nexport default LinkedInInput;\nvar _c;\n$RefreshReg$(_c, \"LinkedInInput\");","map":{"version":3,"names":["React","useState","ProfileDisplay","PredictionResult","jsxDEV","_jsxDEV","LinkedInInput","_s","linkedinUrl","setLinkedinUrl","profile","setProfile","prediction","setPrediction","loading","setLoading","handleAnalyze","profileResponse","fetch","method","headers","body","JSON","stringify","url","profileData","json","predictionResponse","experiences","experience","modelType","predictionData","error","console","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/florianrunkel/Documents/02_Uni/04_Masterarbeit/masterthesis/frontend/src/components/candidates/LinkedInInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ProfileDisplay from './ProfileDisplay';\nimport PredictionResult from './PredictionResult';\n\nconst LinkedInInput = () => {\n  const [linkedinUrl, setLinkedinUrl] = useState('');\n  const [profile, setProfile] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleAnalyze = async () => {\n    setLoading(true);\n    \n    try {\n      // 1. Profil scrapen\n      const profileResponse = await fetch('/scrape-linkedin', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ url: linkedinUrl })\n      });\n      \n      const profileData = await profileResponse.json();\n      setProfile(profileData);\n\n      // 2. Vorhersage erstellen\n      const predictionResponse = await fetch('/predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          experiences: profileData.experience,\n          modelType: 'tft'\n        })\n      });\n      \n      const predictionData = await predictionResponse.json();\n      setPrediction(predictionData);\n    } catch (error) {\n      console.error('Fehler bei der Analyse:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"linkedin-input\">\n      <div className=\"input-group\">\n        <input\n          type=\"url\"\n          value={linkedinUrl}\n          onChange={(e) => setLinkedinUrl(e.target.value)}\n          placeholder=\"https://www.linkedin.com/in/beispiel-profil\"\n          className=\"linkedin-input-field\"\n        />\n        <button \n          onClick={handleAnalyze}\n          className=\"btn-primary\"\n          disabled={!linkedinUrl}\n        >\n          Profil analysieren\n        </button>\n      </div>\n\n      {loading && <div className=\"loader-container-prediction\" />}\n      \n      {profile && <ProfileDisplay profile={profile} />}\n      {prediction && <PredictionResult prediction={prediction} />}\n    </div>\n  );\n};\n\nexport default LinkedInInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}