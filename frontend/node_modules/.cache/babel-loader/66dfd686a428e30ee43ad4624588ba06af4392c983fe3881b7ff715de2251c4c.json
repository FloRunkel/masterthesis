{"ast":null,"code":"var _jsxFileName = \"/Users/florianrunkel/Documents/02_Uni/04_Masterarbeit/masterthesis/frontend/src/components/candidates/prediction/PredictionResultTime.jsx\";\nimport React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst zeitraumRanges = [{\n  label: \"0-6 Monate\",\n  start: 0,\n  end: 6,\n  color: \"#28a745\"\n}, {\n  label: \"7-12 Monate\",\n  start: 7,\n  end: 12,\n  color: \"#ffc107\"\n}, {\n  label: \"13-24 Monate\",\n  start: 13,\n  end: 24,\n  color: \"#dc3545\"\n}, {\n  label: \"über 24 Monate\",\n  start: 25,\n  end: 36,\n  color: \"#b0b0b0\"\n}];\nconst PredictionResultTime = ({\n  prediction\n}) => {\n  if (!prediction) return null;\n\n  // Labels und Farben\n  const labels = [\"0-6 Monate\", \"7-12 Monate\", \"13-24 Monate\", \"über 24 Monate\"];\n  const confidences = Array.isArray(prediction.confidence) ? prediction.confidence : [0, 0, 0, 0];\n  const topIdx = confidences.indexOf(Math.max(...confidences));\n  const confidencesCopy = [...confidences];\n  confidencesCopy[topIdx] = -1;\n  const secondIdx = confidencesCopy.indexOf(Math.max(...confidencesCopy));\n  const secondLabel = labels[secondIdx];\n  const secondProb = confidences[secondIdx];\n  const range = zeitraumRanges[topIdx] || zeitraumRanges[3];\n  const secondRange = zeitraumRanges[secondIdx];\n\n  // --- Timeline-Logik wie in ResultsTableTime.jsx ---\n  // predictedDays: Tage bis zum Wechsel (aus prediction)\n  const today = new Date();\n  const predictedDays = prediction.predicted_days || 0;\n  const predictedDate = new Date(today.getTime() + predictedDays * 24 * 60 * 60 * 1000);\n\n  // Dynamische Anpassung: Startdatum flexibel, aber nie weniger als 4% vom linken Rand\n  const maxShortRangeDays = 180; // 6 Monate\n  let startDate, endDate;\n  if (predictedDays < maxShortRangeDays) {\n    // Bereich mittig: 1 Monat vor heute, 1 Monat nach Wechsel\n    startDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n    endDate = new Date(predictedDate.getFullYear(), predictedDate.getMonth() + 1, predictedDate.getDate());\n  } else {\n    // Standardbereich: heute bis X Monate nach heute\n    startDate = new Date();\n    endDate = new Date(startDate.getFullYear(), startDate.getMonth() + Math.max(6, Math.ceil(predictedDays / 30) + 1), 1);\n  }\n  const totalDays = (endDate - startDate) / (1000 * 60 * 60 * 24);\n  // Offset für linken Rand, damit today nie ganz links klebt\n  const leftOffset = 4;\n  const rightOffset = 100;\n  // todayPos relativ zu startDate, aber nie weniger als leftOffset\n  let todayPos = (today - startDate) / (endDate - startDate) * (rightOffset - leftOffset) + leftOffset;\n  if (todayPos < leftOffset) todayPos = leftOffset;\n  // predictedPos relativ zu startDate, skaliert auf Bereich [leftOffset, rightOffset]\n  const predictedPos = (predictedDate - startDate) / (endDate - startDate) * (rightOffset - leftOffset) + leftOffset;\n  // Monatslabels: ebenfalls mit Offset\n  const maxLabels = 8;\n  const monthsDiff = (endDate.getFullYear() - startDate.getFullYear()) * 12 + (endDate.getMonth() - startDate.getMonth());\n  let labelStep = 1;\n  if (monthsDiff > maxLabels) {\n    labelStep = Math.ceil(monthsDiff / maxLabels);\n  }\n  const dateLabels = [];\n  let labelCursor = new Date(startDate.getFullYear(), startDate.getMonth(), 1);\n  let firstLabelAdded = false;\n  while (labelCursor <= endDate) {\n    const isCurrentMonth = labelCursor.getFullYear() === today.getFullYear() && labelCursor.getMonth() === today.getMonth();\n    if ((labelCursor.getMonth() - startDate.getMonth()) % labelStep === 0 || isCurrentMonth || !firstLabelAdded) {\n      const pos = (labelCursor - startDate) / (endDate - startDate) * (rightOffset - leftOffset) + leftOffset;\n      dateLabels.push({\n        label: labelCursor.toLocaleString('en-US', {\n          month: 'short',\n          year: 'numeric'\n        }),\n        pos\n      });\n      firstLabelAdded = true;\n    }\n    labelCursor.setMonth(labelCursor.getMonth() + 1);\n  }\n  // Markierter Bereich um predictedDate: -20 bis +10 Tage, ebenfalls mit Offset\n  const daysSinceStart = Math.round((predictedDate - startDate) / (1000 * 60 * 60 * 24));\n  const contactStart = Math.max(leftOffset, (daysSinceStart - 20) / totalDays * (rightOffset - leftOffset) + leftOffset);\n  const contactEnd = Math.min(100, (daysSinceStart + 10) / totalDays * (rightOffset - leftOffset) + leftOffset);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: '#fff',\n        borderRadius: '16px',\n        overflow: 'hidden',\n        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n        mb: 4,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: '30px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%',\n            minWidth: 700,\n            overflowX: 'auto',\n            position: 'relative',\n            minHeight: 180,\n            height: 180,\n            px: 4,\n            py: 3,\n            background: '#fff',\n            borderRadius: 5,\n            boxShadow: '0 1px 12px #0001',\n            mb: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 70,\n              left: 0,\n              width: '100%',\n              height: 8,\n              borderRadius: 4,\n              bgcolor: '#233038',\n              zIndex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 62,\n              left: `${contactStart}%`,\n              width: `${contactEnd - contactStart}%`,\n              height: 24,\n              bgcolor: '#07505633',\n              borderRadius: 12,\n              zIndex: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              left: `${todayPos}%`,\n              top: 57,\n              width: 32,\n              height: 32,\n              bgcolor: '#000',\n              borderRadius: '50%',\n              border: '4px solid #fff',\n              zIndex: 4,\n              transform: 'translate(-50%, 0)',\n              boxShadow: '0 0 12px #0008',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: 'absolute',\n              left: `${todayPos}%`,\n              top: 100,\n              transform: 'translate(-50%, 0)',\n              color: '#fff',\n              fontWeight: 800,\n              fontSize: 16,\n              background: '#000',\n              borderRadius: 6,\n              padding: '2px 14px',\n              zIndex: 5,\n              boxShadow: '0 2px 8px #0002',\n              letterSpacing: 1\n            },\n            children: \"today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              left: `${predictedPos}%`,\n              top: 57,\n              width: 32,\n              height: 32,\n              bgcolor: '#075056',\n              borderRadius: '50%',\n              border: '4px solid #fff',\n              zIndex: 4,\n              transform: 'translate(-50%, 0)',\n              boxShadow: '0 0 12px #07505688',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: 'absolute',\n              left: `${predictedPos}%`,\n              top: 100,\n              transform: 'translate(-50%, 0)',\n              color: '#fff',\n              fontWeight: 800,\n              fontSize: 16,\n              background: '#075056',\n              borderRadius: 6,\n              padding: '2px 14px',\n              zIndex: 5,\n              boxShadow: '0 2px 8px #07505644',\n              letterSpacing: 1\n            },\n            children: \"job change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 140,\n              width: '100%',\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: dateLabels.map((m, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'absolute',\n                left: `${m.pos}%`,\n                transform: 'translate(-50%, 0)',\n                color: '#233038',\n                fontWeight: 600,\n                fontSize: 15,\n                background: '#fff',\n                borderRadius: 4,\n                padding: '0 8px',\n                zIndex: 4\n              },\n              children: m.label\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), secondIdx !== topIdx && /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: secondRange.color,\n            textAlign: 'center',\n            fontSize: '1rem',\n            mt: 5,\n            fontWeight: 500\n          },\n          children: [\"Zweitwahrscheinlichkeit: \", secondLabel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 2,\n            color: '#444',\n            textAlign: 'center',\n            fontSize: '1.08rem'\n          },\n          children: [range.label === \"0-6 Monate\" && \"Jetzt ist der ideale Zeitpunkt für eine Ansprache!\", range.label === \"7-12 Monate\" && \"In den nächsten Monaten könnte ein Wechsel interessant werden.\", range.label === \"13-24 Monate\" && \"Mittelfristig beobachten, noch kein akuter Wechselbedarf.\", range.label === \"über 24 Monate\" && \"Aktuell wenig Wechselbereitschaft, langfristig in Kontakt bleiben.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), prediction.llm_explanation && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            p: 2,\n            bgcolor: '#f5f5f5',\n            borderRadius: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: '#444',\n              fontSize: '1.1rem',\n              lineHeight: 1.9\n            },\n            children: prediction.llm_explanation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c = PredictionResultTime;\nexport default PredictionResultTime;\nvar _c;\n$RefreshReg$(_c, \"PredictionResultTime\");","map":{"version":3,"names":["React","Box","Typography","jsxDEV","_jsxDEV","zeitraumRanges","label","start","end","color","PredictionResultTime","prediction","labels","confidences","Array","isArray","confidence","topIdx","indexOf","Math","max","confidencesCopy","secondIdx","secondLabel","secondProb","range","secondRange","today","Date","predictedDays","predicted_days","predictedDate","getTime","maxShortRangeDays","startDate","endDate","getFullYear","getMonth","getDate","ceil","totalDays","leftOffset","rightOffset","todayPos","predictedPos","maxLabels","monthsDiff","labelStep","dateLabels","labelCursor","firstLabelAdded","isCurrentMonth","pos","push","toLocaleString","month","year","setMonth","daysSinceStart","round","contactStart","contactEnd","min","sx","maxWidth","margin","children","bgcolor","borderRadius","overflow","boxShadow","mb","width","p","minWidth","overflowX","position","minHeight","height","px","py","background","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","border","transform","display","alignItems","justifyContent","style","fontWeight","fontSize","padding","letterSpacing","map","m","i","textAlign","mt","llm_explanation","lineHeight","_c","$RefreshReg$"],"sources":["/Users/florianrunkel/Documents/02_Uni/04_Masterarbeit/masterthesis/frontend/src/components/candidates/prediction/PredictionResultTime.jsx"],"sourcesContent":["import React from 'react';\nimport { Box, Typography } from '@mui/material';\n\nconst zeitraumRanges = [\n    { label: \"0-6 Monate\", start: 0, end: 6, color: \"#28a745\" },\n    { label: \"7-12 Monate\", start: 7, end: 12, color: \"#ffc107\" },\n    { label: \"13-24 Monate\", start: 13, end: 24, color: \"#dc3545\" },\n    { label: \"über 24 Monate\", start: 25, end: 36, color: \"#b0b0b0\" }\n  ];\n\nconst PredictionResultTime = ({ prediction }) => {\n  if (!prediction) return null;\n\n  // Labels und Farben\n  const labels = [\"0-6 Monate\", \"7-12 Monate\", \"13-24 Monate\", \"über 24 Monate\"];\n  const confidences = Array.isArray(prediction.confidence) ? prediction.confidence : [0,0,0,0];\n  const topIdx = confidences.indexOf(Math.max(...confidences));\n  const confidencesCopy = [...confidences];\n  confidencesCopy[topIdx] = -1;\n  const secondIdx = confidencesCopy.indexOf(Math.max(...confidencesCopy));\n  const secondLabel = labels[secondIdx];\n  const secondProb = confidences[secondIdx];\n  const range = zeitraumRanges[topIdx] || zeitraumRanges[3];\n  const secondRange = zeitraumRanges[secondIdx];\n\n  // --- Timeline-Logik wie in ResultsTableTime.jsx ---\n  // predictedDays: Tage bis zum Wechsel (aus prediction)\n  const today = new Date();\n  const predictedDays = prediction.predicted_days || 0;\n  const predictedDate = new Date(today.getTime() + predictedDays * 24 * 60 * 60 * 1000);\n\n  // Dynamische Anpassung: Startdatum flexibel, aber nie weniger als 4% vom linken Rand\n  const maxShortRangeDays = 180; // 6 Monate\n  let startDate, endDate;\n  if (predictedDays < maxShortRangeDays) {\n    // Bereich mittig: 1 Monat vor heute, 1 Monat nach Wechsel\n    startDate = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());\n    endDate = new Date(predictedDate.getFullYear(), predictedDate.getMonth() + 1, predictedDate.getDate());\n  } else {\n    // Standardbereich: heute bis X Monate nach heute\n    startDate = new Date();\n    endDate = new Date(startDate.getFullYear(), startDate.getMonth() + Math.max(6, Math.ceil(predictedDays / 30) + 1), 1);\n  }\n  const totalDays = (endDate - startDate) / (1000 * 60 * 60 * 24);\n  // Offset für linken Rand, damit today nie ganz links klebt\n  const leftOffset = 4;\n  const rightOffset = 100;\n  // todayPos relativ zu startDate, aber nie weniger als leftOffset\n  let todayPos = ((today - startDate) / (endDate - startDate)) * (rightOffset - leftOffset) + leftOffset;\n  if (todayPos < leftOffset) todayPos = leftOffset;\n  // predictedPos relativ zu startDate, skaliert auf Bereich [leftOffset, rightOffset]\n  const predictedPos = ((predictedDate - startDate) / (endDate - startDate)) * (rightOffset - leftOffset) + leftOffset;\n  // Monatslabels: ebenfalls mit Offset\n  const maxLabels = 8;\n  const monthsDiff = (endDate.getFullYear() - startDate.getFullYear()) * 12 + (endDate.getMonth() - startDate.getMonth());\n  let labelStep = 1;\n  if (monthsDiff > maxLabels) {\n    labelStep = Math.ceil(monthsDiff / maxLabels);\n  }\n  const dateLabels = [];\n  let labelCursor = new Date(startDate.getFullYear(), startDate.getMonth(), 1);\n  let firstLabelAdded = false;\n  while (labelCursor <= endDate) {\n    const isCurrentMonth = labelCursor.getFullYear() === today.getFullYear() && labelCursor.getMonth() === today.getMonth();\n    if ((labelCursor.getMonth() - startDate.getMonth()) % labelStep === 0 || isCurrentMonth || !firstLabelAdded) {\n      const pos = ((labelCursor - startDate) / (endDate - startDate)) * (rightOffset - leftOffset) + leftOffset;\n      dateLabels.push({\n        label: labelCursor.toLocaleString('en-US', { month: 'short', year: 'numeric' }),\n        pos\n      });\n      firstLabelAdded = true;\n    }\n    labelCursor.setMonth(labelCursor.getMonth() + 1);\n  }\n  // Markierter Bereich um predictedDate: -20 bis +10 Tage, ebenfalls mit Offset\n  const daysSinceStart = Math.round((predictedDate - startDate) / (1000 * 60 * 60 * 24));\n  const contactStart = Math.max(leftOffset, ((daysSinceStart - 20) / totalDays) * (rightOffset - leftOffset) + leftOffset);\n  const contactEnd = Math.min(100, ((daysSinceStart + 10) / totalDays) * (rightOffset - leftOffset) + leftOffset);\n\n  return (\n    <Box sx={{ maxWidth: '1200px', margin: '0 auto' }}>\n      <Box sx={{\n        bgcolor: '#fff',\n        borderRadius: '16px',\n        overflow: 'hidden',\n        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n        mb: 4,\n        width: '100%'\n      }}>\n        <Box sx={{ p: '30px', width: '100%' }}>\n          {/* Zeitstrahl wie in ResultsTableTime */}\n          <Box sx={{\n            width: '100%',\n            minWidth: 700,\n            overflowX: 'auto',\n            position: 'relative',\n            minHeight: 180,\n            height: 180,\n            px: 4,\n            py: 3,\n            background: '#fff',\n            borderRadius: 5,\n            boxShadow: '0 1px 12px #0001',\n            mb: 4\n          }}>\n            {/* Timeline line */}\n            <Box sx={{\n              position: 'absolute', top: 70, left: 0, width: '100%',\n              height: 8, borderRadius: 4, bgcolor: '#233038', zIndex: 1\n            }} />\n            {/* Markierter Bereich um predictedDate */}\n            <Box sx={{\n              position: 'absolute', top: 62, left: `${contactStart}%`,\n              width: `${contactEnd - contactStart}%`, height: 24,\n              bgcolor: '#07505633', borderRadius: 12, zIndex: 2\n            }} />\n            {/* Marker: today */}\n            <Box sx={{\n              position: 'absolute', left: `${todayPos}%`, top: 57,\n              width: 32, height: 32, bgcolor: '#000', borderRadius: '50%',\n              border: '4px solid #fff', zIndex: 4, transform: 'translate(-50%, 0)',\n              boxShadow: '0 0 12px #0008',\n              display: 'flex', alignItems: 'center', justifyContent: 'center'\n            }} />\n            <span style={{\n              position: 'absolute', left: `${todayPos}%`, top: 100, transform: 'translate(-50%, 0)',\n              color: '#fff', fontWeight: 800, fontSize: 16, background: '#000', borderRadius: 6, padding: '2px 14px', zIndex: 5, boxShadow: '0 2px 8px #0002', letterSpacing: 1\n            }}>today</span>\n            {/* Marker: job change */}\n            <Box sx={{\n              position: 'absolute', left: `${predictedPos}%`, top: 57,\n              width: 32, height: 32, bgcolor: '#075056', borderRadius: '50%',\n              border: '4px solid #fff', zIndex: 4, transform: 'translate(-50%, 0)',\n              boxShadow: '0 0 12px #07505688',\n              display: 'flex', alignItems: 'center', justifyContent: 'center'\n            }} />\n            <span style={{\n              position: 'absolute', left: `${predictedPos}%`, top: 100, transform: 'translate(-50%, 0)',\n              color: '#fff', fontWeight: 800, fontSize: 16, background: '#075056', borderRadius: 6, padding: '2px 14px', zIndex: 5, boxShadow: '0 2px 8px #07505644', letterSpacing: 1\n            }}>job change</span>\n            {/* Monatslabels */}\n            <Box sx={{\n              position: 'absolute', top: 140, width: '100%', display: 'flex', justifyContent: 'space-between'\n            }}>\n              {dateLabels.map((m, i) => (\n                <span key={i} style={{\n                  position: 'absolute', left: `${m.pos}%`, transform: 'translate(-50%, 0)',\n                  color: '#233038', fontWeight: 600, fontSize: 15,\n                  background: '#fff', borderRadius: 4, padding: '0 8px', zIndex: 4\n                }}>{m.label}</span>\n              ))}\n            </Box>\n          </Box>\n          {/* Zweitwahrscheinlichkeit */}\n          {secondIdx !== topIdx && (\n            <Typography sx={{ color: secondRange.color, textAlign: 'center', fontSize: '1rem', mt: 5, fontWeight: 500 }}>\n              Zweitwahrscheinlichkeit: {secondLabel}\n            </Typography>\n          )}\n          {/* Empfehlungstext */}\n          <Typography sx={{ mt: 2, color: '#444', textAlign: 'center', fontSize: '1.08rem' }}>\n            {range.label === \"0-6 Monate\" && \"Jetzt ist der ideale Zeitpunkt für eine Ansprache!\"}\n            {range.label === \"7-12 Monate\" && \"In den nächsten Monaten könnte ein Wechsel interessant werden.\"}\n            {range.label === \"13-24 Monate\" && \"Mittelfristig beobachten, noch kein akuter Wechselbedarf.\"}\n            {range.label === \"über 24 Monate\" && \"Aktuell wenig Wechselbereitschaft, langfristig in Kontakt bleiben.\"}\n          </Typography>\n          {/* LLM-Erklärung */}\n          {prediction.llm_explanation && (\n            <Box sx={{ mt: 3, p: 2, bgcolor: '#f5f5f5', borderRadius: 2 }}>\n              <Typography sx={{ color: '#444', fontSize: '1.1rem', lineHeight: 1.9 }}>\n                {prediction.llm_explanation}\n              </Typography>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default PredictionResultTime;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}