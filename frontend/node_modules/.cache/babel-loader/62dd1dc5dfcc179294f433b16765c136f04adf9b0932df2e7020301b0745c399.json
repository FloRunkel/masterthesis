{"ast":null,"code":"var _jsxFileName = \"/Users/florianrunkel/Documents/02_Uni/04_Masterarbeit/masterthesis/frontend/src/components/candidates/ManualInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Box } from '@mui/material';\nimport ExperienceForm from './ExperienceForm';\nimport ModelSelection from './ModelSelection';\nimport PredictionResult from './PredictionResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManualInput = () => {\n  _s();\n  const [experiences, setExperiences] = useState([]);\n  const [selectedModel, setSelectedModel] = useState('tft');\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleAddExperience = experience => {\n    setExperiences([...experiences, experience]);\n  };\n  const handlePredict = async () => {\n    if (experiences.length === 0) {\n      setError('Bitte fügen Sie mindestens eine Berufserfahrung hinzu.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          experiences,\n          modelType: selectedModel\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      setPrediction(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      gutterBottom: true,\n      align: \"left\",\n      children: \"Karriere-Prognose\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 4,\n        maxWidth: 600\n      },\n      children: \"Geben Sie Ihre bisherigen Berufserfahrungen ein, um eine Prognose f\\xFCr Ihre weitere Karriereentwicklung zu erhalten.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(ExperienceForm, {\n        onAddExperience: handleAddExperience,\n        experiences: experiences\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(ModelSelection, {\n        selectedModel: selectedModel,\n        onModelChange: setSelectedModel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      sx: {\n        mt: 2,\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), prediction && /*#__PURE__*/_jsxDEV(PredictionResult, {\n      prediction: prediction,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ManualInput, \"zfNrQtzHp8eNZef+FpmlPPKKlYA=\");\n_c = ManualInput;\nexport default ManualInput;\nvar _c;\n$RefreshReg$(_c, \"ManualInput\");","map":{"version":3,"names":["React","useState","Container","Typography","Box","ExperienceForm","ModelSelection","PredictionResult","jsxDEV","_jsxDEV","ManualInput","_s","experiences","setExperiences","selectedModel","setSelectedModel","prediction","setPrediction","loading","setLoading","error","setError","handleAddExperience","experience","handlePredict","length","response","fetch","method","headers","body","JSON","stringify","modelType","data","json","Error","err","message","maxWidth","sx","py","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","mb","onAddExperience","onModelChange","color","mt","_c","$RefreshReg$"],"sources":["/Users/florianrunkel/Documents/02_Uni/04_Masterarbeit/masterthesis/frontend/src/components/candidates/ManualInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, Box } from '@mui/material';\nimport ExperienceForm from './ExperienceForm';\nimport ModelSelection from './ModelSelection';\nimport PredictionResult from './PredictionResult';\n\nconst ManualInput = () => {\n  const [experiences, setExperiences] = useState([]);\n  const [selectedModel, setSelectedModel] = useState('tft');\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleAddExperience = (experience) => {\n    setExperiences([...experiences, experience]);\n  };\n\n  const handlePredict = async () => {\n    if (experiences.length === 0) {\n      setError('Bitte fügen Sie mindestens eine Berufserfahrung hinzu.');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const response = await fetch('/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          experiences,\n          modelType: selectedModel,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.error) {\n        throw new Error(data.error);\n      }\n\n      setPrediction(data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Typography variant=\"h1\" gutterBottom align=\"left\">\n        Karriere-Prognose\n      </Typography>\n      \n      <Typography variant=\"body1\" sx={{ mb: 4, maxWidth: 600 }}>\n        Geben Sie Ihre bisherigen Berufserfahrungen ein, um eine Prognose für Ihre weitere Karriereentwicklung zu erhalten.\n      </Typography>\n\n      <Box sx={{ mb: 4 }}>\n        <ExperienceForm \n          onAddExperience={handleAddExperience}\n          experiences={experiences}\n        />\n      </Box>\n\n      <Box sx={{ mb: 4 }}>\n        <ModelSelection\n          selectedModel={selectedModel}\n          onModelChange={setSelectedModel}\n        />\n      </Box>\n\n      {error && (\n        <Typography color=\"error\" sx={{ mt: 2, mb: 2 }}>\n          {error}\n        </Typography>\n      )}\n\n      {prediction && (\n        <PredictionResult \n          prediction={prediction}\n          loading={loading}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default ManualInput; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}