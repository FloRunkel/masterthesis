{"ast":null,"code":"var _jsxFileName = \"/Users/florianrunkel/Documents/02_Uni/04_Masterarbeit/masterthesis/frontend/src/components/candidates/LinkedInInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, TextField, CircularProgress, Button, Alert, Fade } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ProfileDisplay from './ProfileDisplay';\nimport PredictionResult from './PredictionResult';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LinkedInInput = () => {\n  _s();\n  const [linkedinUrl, setLinkedinUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [profileData, setProfileData] = useState(null);\n  const [predictionData, setPredictionData] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setProfileData(null);\n    setPredictionData(null);\n    try {\n      // LinkedIn-Profil abrufen\n      const profileResponse = await fetch('/scrape-linkedin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          url: linkedinUrl\n        })\n      });\n      if (!profileResponse.ok) {\n        const errorData = await profileResponse.json();\n        throw new Error(errorData.error || 'Fehler beim Laden des LinkedIn-Profils');\n      }\n      const profile = await profileResponse.json();\n      setProfileData(profile);\n\n      // Karriere-Vorhersage\n      const careerHistory = profile.experience.map(exp => ({\n        position: exp.title,\n        company: exp.company,\n        startDate: exp.duration.split(' - ')[0],\n        endDate: exp.duration.split(' - ')[1] === 'Present' ? null : exp.duration.split(' - ')[1]\n      }));\n      const predictionResponse = await fetch('/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          experiences: careerHistory,\n          modelType: 'tft'\n        })\n      });\n      if (!predictionResponse.ok) {\n        const errorData = await predictionResponse.json();\n        throw new Error(errorData.error || 'Fehler bei der Karriere-Analyse');\n      }\n      const prediction = await predictionResponse.json();\n      setPredictionData(prediction);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveCandidate = async () => {\n    if (!profileData || !predictionData) return;\n    setSaving(true);\n    setSaveSuccess(false);\n    setError(null);\n    try {\n      const candidateData = {\n        firstName: profileData.name.split(' ')[0],\n        lastName: profileData.name.split(' ').slice(1).join(' '),\n        linkedinProfile: linkedinUrl,\n        currentPosition: profileData.currentTitle,\n        location: profileData.location,\n        confidence: [predictionData.confidence],\n        recommendations: predictionData.recommendations,\n        imageUrl: profileData.imageUrl,\n        industry: profileData.industry,\n        experience: profileData.experience\n      };\n      const response = await fetch('/api/candidates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify([candidateData])\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        throw new Error(result.error || 'Fehler beim Speichern des Kandidaten');\n      }\n      if (result.skippedCount > 0) {\n        setSaveSuccess(true);\n        setError('Dieser Kandidat wurde bereits analysiert und ist in der Datenbank gespeichert.');\n        return;\n      }\n      setSaveSuccess(true);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      sx: {\n        fontSize: '2.5rem',\n        fontWeight: 700,\n        color: '#1a1a1a',\n        mb: 2\n      },\n      children: \"LinkedIn Prognose\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: '#666',\n        mb: 4,\n        fontSize: '1rem',\n        maxWidth: '800px'\n      },\n      children: \"Geben Sie einen LinkedIn-Profillink ein, um automatisch eine Karriereprognose basierend auf den verf\\xFCgbaren Berufserfahrungen zu erstellen.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: '#fff',\n        borderRadius: '16px',\n        p: '30px',\n        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        sx: {\n          fontSize: '1.5rem',\n          fontWeight: 600,\n          color: '#1a1a1a',\n          mb: 3\n        },\n        children: \"LinkedIn Profil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          value: linkedinUrl,\n          onChange: e => setLinkedinUrl(e.target.value),\n          placeholder: \"https://www.linkedin.com/in/username\",\n          variant: \"outlined\",\n          sx: {\n            '& .MuiOutlinedInput-root': {\n              bgcolor: '#fff',\n              '& fieldset': {\n                borderColor: '#e0e0e0',\n                borderWidth: 1\n              },\n              '&:hover fieldset': {\n                borderColor: '#1a1a1a'\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#1a1a1a'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          style: {\n            width: '100%',\n            background: '#001B41',\n            color: '#fff',\n            border: 'none',\n            padding: '14px',\n            borderRadius: '8px',\n            fontSize: '1rem',\n            fontWeight: 600,\n            cursor: 'pointer',\n            transition: 'all 0.3s ease'\n          },\n          children: \"PROGNOSE ERSTELLEN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        my: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 40,\n        thickness: 4,\n        sx: {\n          color: '#001B41'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: '#FEE2E2',\n        border: '1px solid #FCA5A5',\n        color: '#DC2626',\n        p: 3,\n        borderRadius: 2,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mb: 1\n        },\n        children: \"Fehler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"ul\",\n        sx: {\n          mt: 2,\n          pl: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Stellen Sie sicher, dass die URL korrekt ist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Das Profil muss \\xF6ffentlich zug\\xE4nglich sein\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Versuchen Sie es sp\\xE4ter erneut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), profileData && /*#__PURE__*/_jsxDEV(ProfileDisplay, {\n      profile: profileData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 23\n    }, this), predictionData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PredictionResult, {\n        prediction: predictionData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          mt: 4,\n          mb: 2,\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: saving ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            color: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 84\n          }, this),\n          onClick: handleSaveCandidate,\n          disabled: saving || saveSuccess,\n          sx: {\n            bgcolor: '#001B41',\n            color: '#fff',\n            px: 4,\n            py: 1.5,\n            borderRadius: '8px',\n            '&:hover': {\n              bgcolor: '#FF5F00'\n            },\n            minWidth: '250px'\n          },\n          children: saving ? 'Speichere...' : 'Kandidat speichern'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), saveSuccess && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            icon: /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n              fontSize: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }, this),\n            severity: \"success\",\n            sx: {\n              mt: 2,\n              bgcolor: '#ECFDF5',\n              color: '#059669',\n              border: '1px solid #A7F3D0',\n              '& .MuiAlert-icon': {\n                color: '#059669'\n              },\n              borderRadius: '8px',\n              minWidth: '250px'\n            },\n            children: error ? 'Hinweis zur Verarbeitung' : 'Kandidat wurde erfolgreich gespeichert!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            sx: {\n              mt: 1,\n              bgcolor: '#F0F9FF',\n              color: '#0369A1',\n              border: '1px solid #BAE6FD',\n              '& .MuiAlert-icon': {\n                color: '#0369A1'\n              },\n              borderRadius: '8px',\n              minWidth: '250px'\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(LinkedInInput, \"Wx0UB/A4RQ+QCZ++hpoOWiDXGVs=\");\n_c = LinkedInInput;\nexport default LinkedInInput;\nvar _c;\n$RefreshReg$(_c, \"LinkedInInput\");","map":{"version":3,"names":["React","useState","Box","Typography","TextField","CircularProgress","Button","Alert","Fade","SaveIcon","CheckCircleOutlineIcon","ProfileDisplay","PredictionResult","jsxDEV","_jsxDEV","Fragment","_Fragment","LinkedInInput","_s","linkedinUrl","setLinkedinUrl","loading","setLoading","error","setError","profileData","setProfileData","predictionData","setPredictionData","saving","setSaving","saveSuccess","setSaveSuccess","handleSubmit","e","preventDefault","profileResponse","fetch","method","headers","body","JSON","stringify","url","ok","errorData","json","Error","profile","careerHistory","experience","map","exp","position","title","company","startDate","duration","split","endDate","predictionResponse","experiences","modelType","prediction","message","handleSaveCandidate","candidateData","firstName","name","lastName","slice","join","linkedinProfile","currentPosition","currentTitle","location","confidence","recommendations","imageUrl","industry","response","result","skippedCount","sx","maxWidth","margin","children","variant","fontSize","fontWeight","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","bgcolor","borderRadius","p","boxShadow","component","onSubmit","display","flexDirection","gap","fullWidth","value","onChange","target","placeholder","borderColor","borderWidth","type","disabled","style","width","background","border","padding","cursor","transition","justifyContent","alignItems","my","size","thickness","mt","pl","startIcon","onClick","px","py","minWidth","icon","severity","_c","$RefreshReg$"],"sources":["/Users/florianrunkel/Documents/02_Uni/04_Masterarbeit/masterthesis/frontend/src/components/candidates/LinkedInInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, TextField, CircularProgress, Button, Alert, Fade } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ProfileDisplay from './ProfileDisplay';\nimport PredictionResult from './PredictionResult';\n\nconst LinkedInInput = () => {\n  const [linkedinUrl, setLinkedinUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [profileData, setProfileData] = useState(null);\n  const [predictionData, setPredictionData] = useState(null);\n  const [saving, setSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setProfileData(null);\n    setPredictionData(null);\n\n    try {\n      // LinkedIn-Profil abrufen\n      const profileResponse = await fetch('/scrape-linkedin', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ url: linkedinUrl })\n      });\n\n      if (!profileResponse.ok) {\n        const errorData = await profileResponse.json();\n        throw new Error(errorData.error || 'Fehler beim Laden des LinkedIn-Profils');\n      }\n\n      const profile = await profileResponse.json();\n      setProfileData(profile);\n\n      // Karriere-Vorhersage\n      const careerHistory = profile.experience.map(exp => ({\n        position: exp.title,\n        company: exp.company,\n        startDate: exp.duration.split(' - ')[0],\n        endDate: exp.duration.split(' - ')[1] === 'Present' ? null : exp.duration.split(' - ')[1]\n      }));\n\n      const predictionResponse = await fetch('/predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          experiences: careerHistory,\n          modelType: 'tft'\n        })\n      });\n\n      if (!predictionResponse.ok) {\n        const errorData = await predictionResponse.json();\n        throw new Error(errorData.error || 'Fehler bei der Karriere-Analyse');\n      }\n\n      const prediction = await predictionResponse.json();\n      setPredictionData(prediction);\n\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveCandidate = async () => {\n    if (!profileData || !predictionData) return;\n    \n    setSaving(true);\n    setSaveSuccess(false);\n    setError(null);\n\n    try {\n      const candidateData = {\n        firstName: profileData.name.split(' ')[0],\n        lastName: profileData.name.split(' ').slice(1).join(' '),\n        linkedinProfile: linkedinUrl,\n        currentPosition: profileData.currentTitle,\n        location: profileData.location,\n        confidence: [predictionData.confidence],\n        recommendations: predictionData.recommendations,\n        imageUrl: profileData.imageUrl,\n        industry: profileData.industry,\n        experience: profileData.experience\n      };\n\n      const response = await fetch('/api/candidates', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify([candidateData])\n      });\n\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.error || 'Fehler beim Speichern des Kandidaten');\n      }\n\n      if (result.skippedCount > 0) {\n        setSaveSuccess(true);\n        setError('Dieser Kandidat wurde bereits analysiert und ist in der Datenbank gespeichert.');\n        return;\n      }\n\n      setSaveSuccess(true);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <Box sx={{ maxWidth: '1200px', margin: '0 auto' }}>\n      <Typography variant=\"h1\" sx={{\n        fontSize: '2.5rem',\n        fontWeight: 700,\n        color: '#1a1a1a',\n        mb: 2\n      }}>\n        LinkedIn Prognose\n      </Typography>\n\n      <Typography sx={{\n        color: '#666',\n        mb: 4,\n        fontSize: '1rem',\n        maxWidth: '800px'\n      }}>\n        Geben Sie einen LinkedIn-Profillink ein, um automatisch eine Karriereprognose basierend auf den verfügbaren Berufserfahrungen zu erstellen.\n      </Typography>\n\n      <Box sx={{\n        bgcolor: '#fff',\n        borderRadius: '16px',\n        p: '30px',\n        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n        mb: 4\n      }}>\n        <Typography variant=\"h2\" sx={{\n          fontSize: '1.5rem',\n          fontWeight: 600,\n          color: '#1a1a1a',\n          mb: 3\n        }}>\n          LinkedIn Profil\n        </Typography>\n\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 3\n        }}>\n          <TextField\n            fullWidth\n            value={linkedinUrl}\n            onChange={(e) => setLinkedinUrl(e.target.value)}\n            placeholder=\"https://www.linkedin.com/in/username\"\n            variant=\"outlined\"\n            sx={{\n              '& .MuiOutlinedInput-root': {\n                bgcolor: '#fff',\n                '& fieldset': {\n                  borderColor: '#e0e0e0',\n                  borderWidth: 1\n                },\n                '&:hover fieldset': {\n                  borderColor: '#1a1a1a'\n                },\n                '&.Mui-focused fieldset': {\n                  borderColor: '#1a1a1a'\n                }\n              }\n            }}\n          />\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            style={{\n              width: '100%',\n              background: '#001B41',\n              color: '#fff',\n              border: 'none',\n              padding: '14px',\n              borderRadius: '8px',\n              fontSize: '1rem',\n              fontWeight: 600,\n              cursor: 'pointer',\n              transition: 'all 0.3s ease'\n            }}\n          >\n            PROGNOSE ERSTELLEN\n          </button>\n        </Box>\n      </Box>\n\n      {loading && (\n        <Box sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          my: 4\n        }}>\n          <CircularProgress\n            size={40}\n            thickness={4}\n            sx={{\n              color: '#001B41'\n            }}\n          />\n        </Box>\n      )}\n\n      {error && (\n        <Box sx={{\n          bgcolor: '#FEE2E2',\n          border: '1px solid #FCA5A5',\n          color: '#DC2626',\n          p: 3,\n          borderRadius: 2,\n          mb: 3\n        }}>\n          <Typography variant=\"h6\" sx={{ mb: 1 }}>Fehler</Typography>\n          <Typography>{error}</Typography>\n          <Box component=\"ul\" sx={{ mt: 2, pl: 2 }}>\n            <li>Stellen Sie sicher, dass die URL korrekt ist</li>\n            <li>Das Profil muss öffentlich zugänglich sein</li>\n            <li>Versuchen Sie es später erneut</li>\n          </Box>\n        </Box>\n      )}\n\n      {profileData && <ProfileDisplay profile={profileData} />}\n      {predictionData && (\n        <>\n          <PredictionResult prediction={predictionData} />\n          <Box sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            mt: 4,\n            mb: 2,\n            gap: 2\n          }}>\n            <Button\n              variant=\"contained\"\n              startIcon={saving ? <CircularProgress size={20} color=\"inherit\" /> : <SaveIcon />}\n              onClick={handleSaveCandidate}\n              disabled={saving || saveSuccess}\n              sx={{\n                bgcolor: '#001B41',\n                color: '#fff',\n                px: 4,\n                py: 1.5,\n                borderRadius: '8px',\n                '&:hover': {\n                  bgcolor: '#FF5F00'\n                },\n                minWidth: '250px'\n              }}\n            >\n              {saving ? 'Speichere...' : 'Kandidat speichern'}\n            </Button>\n            {saveSuccess && (\n              <>\n                <Alert \n                  icon={<CheckCircleOutlineIcon fontSize=\"inherit\" />}\n                  severity=\"success\"\n                  sx={{\n                    mt: 2,\n                    bgcolor: '#ECFDF5',\n                    color: '#059669',\n                    border: '1px solid #A7F3D0',\n                    '& .MuiAlert-icon': {\n                      color: '#059669'\n                    },\n                    borderRadius: '8px',\n                    minWidth: '250px'\n                  }}\n                >\n                  {error ? 'Hinweis zur Verarbeitung' : 'Kandidat wurde erfolgreich gespeichert!'}\n                </Alert>\n                {error && (\n                  <Alert \n                    severity=\"info\"\n                    sx={{\n                      mt: 1,\n                      bgcolor: '#F0F9FF',\n                      color: '#0369A1',\n                      border: '1px solid #BAE6FD',\n                      '& .MuiAlert-icon': {\n                        color: '#0369A1'\n                      },\n                      borderRadius: '8px',\n                      minWidth: '250px'\n                    }}\n                  >\n                    {error}\n                  </Alert>\n                )}\n              </>\n            )}\n          </Box>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default LinkedInInput; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,UAAU,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AACjG,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,sBAAsB,MAAM,wCAAwC;AAC3E,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC4B,MAAM,EAAEC,SAAS,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAAC8B,WAAW,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMgC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBb,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdE,cAAc,CAAC,IAAI,CAAC;IACpBE,iBAAiB,CAAC,IAAI,CAAC;IAEvB,IAAI;MACF;MACA,MAAMQ,eAAe,GAAG,MAAMC,KAAK,CAAC,kBAAkB,EAAE;QACtDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,GAAG,EAAExB;QAAY,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAI,CAACiB,eAAe,CAACQ,EAAE,EAAE;QACvB,MAAMC,SAAS,GAAG,MAAMT,eAAe,CAACU,IAAI,CAAC,CAAC;QAC9C,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACtB,KAAK,IAAI,wCAAwC,CAAC;MAC9E;MAEA,MAAMyB,OAAO,GAAG,MAAMZ,eAAe,CAACU,IAAI,CAAC,CAAC;MAC5CpB,cAAc,CAACsB,OAAO,CAAC;;MAEvB;MACA,MAAMC,aAAa,GAAGD,OAAO,CAACE,UAAU,CAACC,GAAG,CAACC,GAAG,KAAK;QACnDC,QAAQ,EAAED,GAAG,CAACE,KAAK;QACnBC,OAAO,EAAEH,GAAG,CAACG,OAAO;QACpBC,SAAS,EAAEJ,GAAG,CAACK,QAAQ,CAACC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACvCC,OAAO,EAAEP,GAAG,CAACK,QAAQ,CAACC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,IAAI,GAAGN,GAAG,CAACK,QAAQ,CAACC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;MAC1F,CAAC,CAAC,CAAC;MAEH,MAAME,kBAAkB,GAAG,MAAMvB,KAAK,CAAC,UAAU,EAAE;QACjDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBmB,WAAW,EAAEZ,aAAa;UAC1Ba,SAAS,EAAE;QACb,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACF,kBAAkB,CAAChB,EAAE,EAAE;QAC1B,MAAMC,SAAS,GAAG,MAAMe,kBAAkB,CAACd,IAAI,CAAC,CAAC;QACjD,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACtB,KAAK,IAAI,iCAAiC,CAAC;MACvE;MAEA,MAAMwC,UAAU,GAAG,MAAMH,kBAAkB,CAACd,IAAI,CAAC,CAAC;MAClDlB,iBAAiB,CAACmC,UAAU,CAAC;IAE/B,CAAC,CAAC,OAAOxC,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACyC,OAAO,CAAC;IACzB,CAAC,SAAS;MACR1C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM2C,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAACxC,WAAW,IAAI,CAACE,cAAc,EAAE;IAErCG,SAAS,CAAC,IAAI,CAAC;IACfE,cAAc,CAAC,KAAK,CAAC;IACrBR,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAM0C,aAAa,GAAG;QACpBC,SAAS,EAAE1C,WAAW,CAAC2C,IAAI,CAACV,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACzCW,QAAQ,EAAE5C,WAAW,CAAC2C,IAAI,CAACV,KAAK,CAAC,GAAG,CAAC,CAACY,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;QACxDC,eAAe,EAAErD,WAAW;QAC5BsD,eAAe,EAAEhD,WAAW,CAACiD,YAAY;QACzCC,QAAQ,EAAElD,WAAW,CAACkD,QAAQ;QAC9BC,UAAU,EAAE,CAACjD,cAAc,CAACiD,UAAU,CAAC;QACvCC,eAAe,EAAElD,cAAc,CAACkD,eAAe;QAC/CC,QAAQ,EAAErD,WAAW,CAACqD,QAAQ;QAC9BC,QAAQ,EAAEtD,WAAW,CAACsD,QAAQ;QAC9B7B,UAAU,EAAEzB,WAAW,CAACyB;MAC1B,CAAC;MAED,MAAM8B,QAAQ,GAAG,MAAM3C,KAAK,CAAC,iBAAiB,EAAE;QAC9CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,CAACwB,aAAa,CAAC;MACtC,CAAC,CAAC;MAEF,MAAMe,MAAM,GAAG,MAAMD,QAAQ,CAAClC,IAAI,CAAC,CAAC;MAEpC,IAAI,CAACkC,QAAQ,CAACpC,EAAE,EAAE;QAChB,MAAM,IAAIG,KAAK,CAACkC,MAAM,CAAC1D,KAAK,IAAI,sCAAsC,CAAC;MACzE;MAEA,IAAI0D,MAAM,CAACC,YAAY,GAAG,CAAC,EAAE;QAC3BlD,cAAc,CAAC,IAAI,CAAC;QACpBR,QAAQ,CAAC,gFAAgF,CAAC;QAC1F;MACF;MAEAQ,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACyC,OAAO,CAAC;IACzB,CAAC,SAAS;MACRlC,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAED,oBACEhB,OAAA,CAACZ,GAAG;IAACiF,EAAE,EAAE;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAChDxE,OAAA,CAACX,UAAU;MAACoF,OAAO,EAAC,IAAI;MAACJ,EAAE,EAAE;QAC3BK,QAAQ,EAAE,QAAQ;QAClBC,UAAU,EAAE,GAAG;QACfC,KAAK,EAAE,SAAS;QAChBC,EAAE,EAAE;MACN,CAAE;MAAAL,QAAA,EAAC;IAEH;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbjF,OAAA,CAACX,UAAU;MAACgF,EAAE,EAAE;QACdO,KAAK,EAAE,MAAM;QACbC,EAAE,EAAE,CAAC;QACLH,QAAQ,EAAE,MAAM;QAChBJ,QAAQ,EAAE;MACZ,CAAE;MAAAE,QAAA,EAAC;IAEH;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEbjF,OAAA,CAACZ,GAAG;MAACiF,EAAE,EAAE;QACPa,OAAO,EAAE,MAAM;QACfC,YAAY,EAAE,MAAM;QACpBC,CAAC,EAAE,MAAM;QACTC,SAAS,EAAE,8BAA8B;QACzCR,EAAE,EAAE;MACN,CAAE;MAAAL,QAAA,gBACAxE,OAAA,CAACX,UAAU;QAACoF,OAAO,EAAC,IAAI;QAACJ,EAAE,EAAE;UAC3BK,QAAQ,EAAE,QAAQ;UAClBC,UAAU,EAAE,GAAG;UACfC,KAAK,EAAE,SAAS;UAChBC,EAAE,EAAE;QACN,CAAE;QAAAL,QAAA,EAAC;MAEH;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEbjF,OAAA,CAACZ,GAAG;QAACkG,SAAS,EAAC,MAAM;QAACC,QAAQ,EAAEpE,YAAa;QAACkD,EAAE,EAAE;UAChDmB,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBC,GAAG,EAAE;QACP,CAAE;QAAAlB,QAAA,gBACAxE,OAAA,CAACV,SAAS;UACRqG,SAAS;UACTC,KAAK,EAAEvF,WAAY;UACnBwF,QAAQ,EAAGzE,CAAC,IAAKd,cAAc,CAACc,CAAC,CAAC0E,MAAM,CAACF,KAAK,CAAE;UAChDG,WAAW,EAAC,sCAAsC;UAClDtB,OAAO,EAAC,UAAU;UAClBJ,EAAE,EAAE;YACF,0BAA0B,EAAE;cAC1Ba,OAAO,EAAE,MAAM;cACf,YAAY,EAAE;gBACZc,WAAW,EAAE,SAAS;gBACtBC,WAAW,EAAE;cACf,CAAC;cACD,kBAAkB,EAAE;gBAClBD,WAAW,EAAE;cACf,CAAC;cACD,wBAAwB,EAAE;gBACxBA,WAAW,EAAE;cACf;YACF;UACF;QAAE;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEFjF,OAAA;UACEkG,IAAI,EAAC,QAAQ;UACbC,QAAQ,EAAE5F,OAAQ;UAClB6F,KAAK,EAAE;YACLC,KAAK,EAAE,MAAM;YACbC,UAAU,EAAE,SAAS;YACrB1B,KAAK,EAAE,MAAM;YACb2B,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE,MAAM;YACfrB,YAAY,EAAE,KAAK;YACnBT,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,GAAG;YACf8B,MAAM,EAAE,SAAS;YACjBC,UAAU,EAAE;UACd,CAAE;UAAAlC,QAAA,EACH;QAED;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL1E,OAAO,iBACNP,OAAA,CAACZ,GAAG;MAACiF,EAAE,EAAE;QACPmB,OAAO,EAAE,MAAM;QACfmB,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,EAAE,EAAE;MACN,CAAE;MAAArC,QAAA,eACAxE,OAAA,CAACT,gBAAgB;QACfuH,IAAI,EAAE,EAAG;QACTC,SAAS,EAAE,CAAE;QACb1C,EAAE,EAAE;UACFO,KAAK,EAAE;QACT;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,EAEAxE,KAAK,iBACJT,OAAA,CAACZ,GAAG;MAACiF,EAAE,EAAE;QACPa,OAAO,EAAE,SAAS;QAClBqB,MAAM,EAAE,mBAAmB;QAC3B3B,KAAK,EAAE,SAAS;QAChBQ,CAAC,EAAE,CAAC;QACJD,YAAY,EAAE,CAAC;QACfN,EAAE,EAAE;MACN,CAAE;MAAAL,QAAA,gBACAxE,OAAA,CAACX,UAAU;QAACoF,OAAO,EAAC,IAAI;QAACJ,EAAE,EAAE;UAAEQ,EAAE,EAAE;QAAE,CAAE;QAAAL,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC3DjF,OAAA,CAACX,UAAU;QAAAmF,QAAA,EAAE/D;MAAK;QAAAqE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAChCjF,OAAA,CAACZ,GAAG;QAACkG,SAAS,EAAC,IAAI;QAACjB,EAAE,EAAE;UAAE2C,EAAE,EAAE,CAAC;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAzC,QAAA,gBACvCxE,OAAA;UAAAwE,QAAA,EAAI;QAA4C;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrDjF,OAAA;UAAAwE,QAAA,EAAI;QAA0C;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDjF,OAAA;UAAAwE,QAAA,EAAI;QAA8B;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAtE,WAAW,iBAAIX,OAAA,CAACH,cAAc;MAACqC,OAAO,EAAEvB;IAAY;MAAAmE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvDpE,cAAc,iBACbb,OAAA,CAAAE,SAAA;MAAAsE,QAAA,gBACExE,OAAA,CAACF,gBAAgB;QAACmD,UAAU,EAAEpC;MAAe;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChDjF,OAAA,CAACZ,GAAG;QAACiF,EAAE,EAAE;UACPmB,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBmB,UAAU,EAAE,QAAQ;UACpBI,EAAE,EAAE,CAAC;UACLnC,EAAE,EAAE,CAAC;UACLa,GAAG,EAAE;QACP,CAAE;QAAAlB,QAAA,gBACAxE,OAAA,CAACR,MAAM;UACLiF,OAAO,EAAC,WAAW;UACnByC,SAAS,EAAEnG,MAAM,gBAAGf,OAAA,CAACT,gBAAgB;YAACuH,IAAI,EAAE,EAAG;YAAClC,KAAK,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGjF,OAAA,CAACL,QAAQ;YAAAmF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAClFkC,OAAO,EAAEhE,mBAAoB;UAC7BgD,QAAQ,EAAEpF,MAAM,IAAIE,WAAY;UAChCoD,EAAE,EAAE;YACFa,OAAO,EAAE,SAAS;YAClBN,KAAK,EAAE,MAAM;YACbwC,EAAE,EAAE,CAAC;YACLC,EAAE,EAAE,GAAG;YACPlC,YAAY,EAAE,KAAK;YACnB,SAAS,EAAE;cACTD,OAAO,EAAE;YACX,CAAC;YACDoC,QAAQ,EAAE;UACZ,CAAE;UAAA9C,QAAA,EAEDzD,MAAM,GAAG,cAAc,GAAG;QAAoB;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,EACRhE,WAAW,iBACVjB,OAAA,CAAAE,SAAA;UAAAsE,QAAA,gBACExE,OAAA,CAACP,KAAK;YACJ8H,IAAI,eAAEvH,OAAA,CAACJ,sBAAsB;cAAC8E,QAAQ,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YACpDuC,QAAQ,EAAC,SAAS;YAClBnD,EAAE,EAAE;cACF2C,EAAE,EAAE,CAAC;cACL9B,OAAO,EAAE,SAAS;cAClBN,KAAK,EAAE,SAAS;cAChB2B,MAAM,EAAE,mBAAmB;cAC3B,kBAAkB,EAAE;gBAClB3B,KAAK,EAAE;cACT,CAAC;cACDO,YAAY,EAAE,KAAK;cACnBmC,QAAQ,EAAE;YACZ,CAAE;YAAA9C,QAAA,EAED/D,KAAK,GAAG,0BAA0B,GAAG;UAAyC;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1E,CAAC,EACPxE,KAAK,iBACJT,OAAA,CAACP,KAAK;YACJ+H,QAAQ,EAAC,MAAM;YACfnD,EAAE,EAAE;cACF2C,EAAE,EAAE,CAAC;cACL9B,OAAO,EAAE,SAAS;cAClBN,KAAK,EAAE,SAAS;cAChB2B,MAAM,EAAE,mBAAmB;cAC3B,kBAAkB,EAAE;gBAClB3B,KAAK,EAAE;cACT,CAAC;cACDO,YAAY,EAAE,KAAK;cACnBmC,QAAQ,EAAE;YACZ,CAAE;YAAA9C,QAAA,EAED/D;UAAK;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CACR;QAAA,eACD,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA,eACN,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7E,EAAA,CAnTID,aAAa;AAAAsH,EAAA,GAAbtH,aAAa;AAqTnB,eAAeA,aAAa;AAAC,IAAAsH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}