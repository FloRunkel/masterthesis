{"ast":null,"code":"var _jsxFileName = \"/Users/florianrunkel/Documents/02_Uni/04_Masterarbeit/masterthesis/frontend/src/components/candidates/forms/BatchUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Button, Alert } from '@mui/material';\nimport ResultsTableClassification from '../display/ResultsTableClassification';\nimport LoadingSpinner from '../../common/LoadingSpinner';\nimport ResultsTableTimeSeries from '../display/ResultsTableTimeSeries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modelOptions = [{\n  value: 'gru',\n  title: 'Gated Recurrent Unit (GRU)',\n  description: 'Sequenzmodell für Zeitreihen und Karriereverläufe'\n}, {\n  value: 'xgboost',\n  title: 'Extreme Gradient Boosting (XGBoost)',\n  description: 'Leistungsstarkes Machine-Learning-Modell für strukturierte Daten'\n}, {\n  value: 'tft',\n  title: 'Temporal Fusion Transformer (TFT)',\n  description: 'Modernes Deep-Learning-Modell für komplexe Zeitreihen'\n}];\nconst BatchUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [results, setResults] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  const [saveError, setSaveError] = useState(null);\n  const [modelType, setModelType] = useState('');\n  const [originalProfiles, setOriginalProfiles] = useState([]);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (!selectedFile) return;\n    if (!selectedFile.name.endsWith('.csv')) {\n      alert(\"Bitte wählen Sie eine gültige CSV-Datei aus.\");\n      return;\n    }\n    setFile(selectedFile);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Bitte wählen Sie eine CSV-Datei aus.\");\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('modelType', modelType);\n    try {\n      const response = await fetch('http://localhost:5100/predict-batch', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Upload fehlgeschlagen');\n      }\n      const data = await response.json();\n      if (data.error) {\n        setResults({\n          error: data.error,\n          message: \"Bitte überprüfen Sie das Format Ihrer CSV-Datei.\"\n        });\n        return;\n      }\n      setResults(data.results);\n      if (data.originalProfiles) setOriginalProfiles(data.originalProfiles);\n    } catch (error) {\n      setError(error.message);\n      setResults({\n        error: error.message,\n        message: \"Bitte stellen Sie sicher, dass Ihre CSV-Datei folgende Spalten enthält:\",\n        requirements: [\"firstName (Vorname)\", \"lastName (Nachname)\", \"linkedinProfile (LinkedIn-URL)\", \"positions (Berufserfahrungen im JSON-Format)\"]\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSaveCandidates = async candidates => {\n    setIsSaving(true);\n    setSaveError(null);\n    setSaveSuccess(false);\n    try {\n      const candidatesWithModel = candidates.map(candidate => ({\n        ...candidate,\n        modelType: modelType\n      }));\n      const response = await fetch('http://localhost:5100/api/candidates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(candidatesWithModel)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Fehler beim Speichern der Kandidaten');\n      }\n      setSaveSuccess(true);\n      setResults(null); // Reset results after successful save\n      setFile(null);\n    } catch (error) {\n      setSaveError(error.message);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      sx: {\n        fontSize: '2.5rem',\n        fontWeight: 700,\n        color: '#1a1a1a',\n        mb: 2\n      },\n      children: \"Batch Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: '#666',\n        mb: 4,\n        fontSize: '1rem',\n        maxWidth: '800px'\n      },\n      children: \"Laden Sie eine CSV-Datei hoch, um die Wechselwahrscheinlichkeit mehrerer Kandidaten gleichzeitig zu analysieren.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: '#fff',\n        borderRadius: '16px',\n        p: '30px',\n        boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        sx: {\n          fontSize: '1.5rem',\n          fontWeight: 600,\n          color: '#1a1a1a',\n          mb: 3\n        },\n        children: \"CSV-Datei hochladen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 1,\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            component: \"label\",\n            htmlFor: \"csvFile\",\n            variant: \"outlined\",\n            sx: {\n              width: '100%',\n              bgcolor: '#001B41',\n              color: 'white',\n              border: 'none',\n              p: '14px',\n              borderRadius: '8px',\n              fontSize: '1rem',\n              fontWeight: 600,\n              cursor: 'pointer',\n              transition: 'all 0.3s ease',\n              textTransform: 'none',\n              '&:hover': {\n                bgcolor: '#FF8000'\n              }\n            },\n            children: \"DATEI AUSW\\xC4HLEN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontSize: '1rem',\n              color: '#666',\n              textAlign: 'center',\n              paddingTop: '10px'\n            },\n            children: file ? file.name : 'Keine ausgewählt'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"csvFile\",\n          accept: \".csv\",\n          onChange: handleFileChange,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleUpload,\n          disabled: !file || loading || !modelType,\n          sx: {\n            width: '100%',\n            bgcolor: '#001B41',\n            color: 'white',\n            border: 'none',\n            p: '14px',\n            borderRadius: '8px',\n            fontSize: '1rem',\n            fontWeight: 600,\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            textTransform: 'none',\n            '&:hover': {\n              bgcolor: '#FF8000'\n            },\n            '&.Mui-disabled': {\n              bgcolor: '#f1f3f4',\n              color: '#80868b'\n            }\n          },\n          children: \"PROGNOSE ERSTELLEN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: '#fff',\n        borderRadius: '18px',\n        p: '40px 30px',\n        boxShadow: '0 2px 8px rgba(0,0,0,0.04)',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        sx: {\n          fontSize: '1.7rem',\n          fontWeight: 700,\n          color: '#2C425C',\n          mb: 1\n        },\n        children: \"KI-Modell ausw\\xE4hlen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: '#888',\n          mb: 4,\n          fontSize: '1.08rem'\n        },\n        children: \"W\\xE4hlen Sie das passende Modell f\\xFCr eine pr\\xE4zise Prognose.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          mb: 2\n        },\n        children: modelOptions.map(option => /*#__PURE__*/_jsxDEV(Box, {\n          onClick: () => setModelType(option.value),\n          sx: {\n            cursor: 'pointer',\n            bgcolor: '#fff',\n            border: modelType === option.value ? '2px solid #FF8000' : '1.5px solid #e3e6f0',\n            borderRadius: '16px',\n            p: 3,\n            boxShadow: modelType === option.value ? '0 2px 8px rgba(59,71,250,0.08)' : 'none',\n            transition: 'all 0.2s',\n            display: 'flex',\n            flexDirection: 'column',\n            outline: modelType === option.value ? '2px solid #FF8000' : 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              fontWeight: 700,\n              fontSize: '1.18rem',\n              color: '#1a1a1a',\n              mb: 0.5\n            },\n            children: option.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: '#888',\n              fontSize: '1.05rem'\n            },\n            children: option.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), saveError && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: saveError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this), saveSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mt: 2\n      },\n      children: \"Kandidaten wurden erfolgreich gespeichert!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }, this), results && !loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3\n      },\n      children: modelType === 'tft' || modelType === 'gru' ? /*#__PURE__*/_jsxDEV(ResultsTableTimeSeries, {\n        results: results,\n        onSave: handleSaveCandidates,\n        isSaving: isSaving,\n        originalProfiles: originalProfiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(ResultsTableClassification, {\n        results: results,\n        onSave: handleSaveCandidates,\n        isSaving: isSaving,\n        originalProfiles: originalProfiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(BatchUpload, \"85G18SsuKJo29Hz+1WzyTkvpRzI=\");\n_c = BatchUpload;\nexport default BatchUpload;\nvar _c;\n$RefreshReg$(_c, \"BatchUpload\");","map":{"version":3,"names":["React","useState","Box","Typography","Button","Alert","ResultsTableClassification","LoadingSpinner","ResultsTableTimeSeries","jsxDEV","_jsxDEV","modelOptions","value","title","description","BatchUpload","_s","file","setFile","loading","setLoading","error","setError","results","setResults","isSaving","setIsSaving","saveSuccess","setSaveSuccess","saveError","setSaveError","modelType","setModelType","originalProfiles","setOriginalProfiles","handleFileChange","e","selectedFile","target","files","name","endsWith","alert","handleUpload","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","message","requirements","handleSaveCandidates","candidates","candidatesWithModel","map","candidate","headers","JSON","stringify","sx","maxWidth","margin","children","variant","fontSize","fontWeight","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","bgcolor","borderRadius","p","boxShadow","display","flexDirection","gap","width","component","htmlFor","border","cursor","transition","textTransform","textAlign","paddingTop","type","id","accept","onChange","style","onClick","disabled","option","outline","severity","mt","onSave","_c","$RefreshReg$"],"sources":["/Users/florianrunkel/Documents/02_Uni/04_Masterarbeit/masterthesis/frontend/src/components/candidates/forms/BatchUpload.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, Button, Alert } from '@mui/material';\nimport ResultsTableClassification from '../display/ResultsTableClassification';\nimport LoadingSpinner from '../../common/LoadingSpinner';\nimport ResultsTableTimeSeries from '../display/ResultsTableTimeSeries';\n\nconst modelOptions = [\n  {\n    value: 'gru',\n    title: 'Gated Recurrent Unit (GRU)',\n    description: 'Sequenzmodell für Zeitreihen und Karriereverläufe'\n  },\n  {\n    value: 'xgboost',\n    title: 'Extreme Gradient Boosting (XGBoost)',\n    description: 'Leistungsstarkes Machine-Learning-Modell für strukturierte Daten'\n  },\n  {\n    value: 'tft',\n    title: 'Temporal Fusion Transformer (TFT)',\n    description: 'Modernes Deep-Learning-Modell für komplexe Zeitreihen'\n  }\n];\n\nconst BatchUpload = () => {\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [results, setResults] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n  const [saveError, setSaveError] = useState(null);\n  const [modelType, setModelType] = useState('');\n  const [originalProfiles, setOriginalProfiles] = useState([]);\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    if (!selectedFile) return;\n    if (!selectedFile.name.endsWith('.csv')) {\n      alert(\"Bitte wählen Sie eine gültige CSV-Datei aus.\");\n      return;\n    }\n    setFile(selectedFile);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Bitte wählen Sie eine CSV-Datei aus.\");\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('modelType', modelType);\n    try {\n      const response = await fetch('http://localhost:5100/predict-batch', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Upload fehlgeschlagen');\n      }\n      const data = await response.json();\n      if (data.error) {\n        setResults({\n          error: data.error,\n          message: \"Bitte überprüfen Sie das Format Ihrer CSV-Datei.\"\n        });\n        return;\n      }\n      setResults(data.results);\n      if (data.originalProfiles) setOriginalProfiles(data.originalProfiles);\n    } catch (error) {\n      setError(error.message);\n      setResults({\n        error: error.message,\n        message: \"Bitte stellen Sie sicher, dass Ihre CSV-Datei folgende Spalten enthält:\",\n        requirements: [\n          \"firstName (Vorname)\",\n          \"lastName (Nachname)\",\n          \"linkedinProfile (LinkedIn-URL)\",\n          \"positions (Berufserfahrungen im JSON-Format)\"\n        ]\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveCandidates = async (candidates) => {\n    setIsSaving(true);\n    setSaveError(null);\n    setSaveSuccess(false);\n    try {\n      const candidatesWithModel = candidates.map(candidate => ({\n        ...candidate,\n        modelType: modelType\n      }));\n      const response = await fetch('http://localhost:5100/api/candidates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(candidatesWithModel),\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || 'Fehler beim Speichern der Kandidaten');\n      }\n      setSaveSuccess(true);\n      setResults(null); // Reset results after successful save\n      setFile(null);\n    } catch (error) {\n      setSaveError(error.message);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  return (\n    <Box sx={{ maxWidth: '1200px', margin: '0 auto' }}>\n      <Typography variant=\"h1\" sx={{ fontSize: '2.5rem', fontWeight: 700, color: '#1a1a1a', mb: 2 }}>Batch Upload</Typography>\n      <Typography sx={{ color: '#666', mb: 4, fontSize: '1rem', maxWidth: '800px' }}>Laden Sie eine CSV-Datei hoch, um die Wechselwahrscheinlichkeit mehrerer Kandidaten gleichzeitig zu analysieren.</Typography>\n      {/* Upload-Box */}\n      <Box sx={{ bgcolor: '#fff', borderRadius: '16px', p: '30px', boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)', mb: 4 }}>\n        <Typography variant=\"h2\" sx={{ fontSize: '1.5rem', fontWeight: 600, color: '#1a1a1a', mb: 3 }}>CSV-Datei hochladen</Typography>\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1, width: '100%' }}>\n            <Button component=\"label\" htmlFor=\"csvFile\" variant=\"outlined\" sx={{ width: '100%', bgcolor: '#001B41', color: 'white', border: 'none', p: '14px', borderRadius: '8px', fontSize: '1rem', fontWeight: 600, cursor: 'pointer', transition: 'all 0.3s ease', textTransform: 'none', '&:hover': { bgcolor: '#FF8000' } }}>DATEI AUSWÄHLEN</Button>\n            <Typography sx={{ fontSize: '1rem', color: '#666', textAlign: 'center', paddingTop: '10px' }}>{file ? file.name : 'Keine ausgewählt'}</Typography>\n          </Box>\n          <input type=\"file\" id=\"csvFile\" accept=\".csv\" onChange={handleFileChange} style={{ display: 'none' }} />\n          <Button onClick={handleUpload} disabled={!file || loading || !modelType} sx={{ width: '100%', bgcolor: '#001B41', color: 'white', border: 'none', p: '14px', borderRadius: '8px', fontSize: '1rem', fontWeight: 600, cursor: 'pointer', transition: 'all 0.3s ease', textTransform: 'none', '&:hover': { bgcolor: '#FF8000' }, '&.Mui-disabled': { bgcolor: '#f1f3f4', color: '#80868b' } }}>PROGNOSE ERSTELLEN</Button>\n        </Box>\n      </Box>\n\n      {/* Modellauswahl-Box */}\n      <Box sx={{ bgcolor: '#fff', borderRadius: '18px', p: '40px 30px', boxShadow: '0 2px 8px rgba(0,0,0,0.04)', mb: 4 }}>\n        <Typography variant=\"h2\" sx={{ fontSize: '1.7rem', fontWeight: 700, color: '#2C425C', mb: 1 }}>\n          KI-Modell auswählen\n        </Typography>\n        <Typography sx={{ color: '#888', mb: 4, fontSize: '1.08rem' }}>\n          Wählen Sie das passende Modell für eine präzise Prognose.\n        </Typography>\n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2, mb: 2 }}>\n          {modelOptions.map(option => (\n            <Box key={option.value} onClick={() => setModelType(option.value)} sx={{ cursor: 'pointer', bgcolor: '#fff', border: modelType === option.value ? '2px solid #FF8000' : '1.5px solid #e3e6f0', borderRadius: '16px', p: 3, boxShadow: modelType === option.value ? '0 2px 8px rgba(59,71,250,0.08)' : 'none', transition: 'all 0.2s', display: 'flex', flexDirection: 'column', outline: modelType === option.value ? '2px solid #FF8000' : 'none' }}>\n              <Typography sx={{ fontWeight: 700, fontSize: '1.18rem', color: '#1a1a1a', mb: 0.5 }}>\n                {option.title}\n              </Typography>\n              <Typography sx={{ color: '#888', fontSize: '1.05rem' }}>\n                {option.description}\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mt: 2 }}>\n          {error}\n        </Alert>\n      )}\n      {saveError && (\n        <Alert severity=\"error\" sx={{ mt: 2 }}>\n          {saveError}\n        </Alert>\n      )}\n      {saveSuccess && (\n        <Alert severity=\"success\" sx={{ mt: 2 }}>\n          Kandidaten wurden erfolgreich gespeichert!\n        </Alert>\n      )}\n      {loading && <LoadingSpinner />}\n      {results && !loading && (\n        <Box sx={{ mt: 3 }}>\n          {modelType === 'tft' || modelType === 'gru' ? (\n            <ResultsTableTimeSeries\n              results={results}\n              onSave={handleSaveCandidates}\n              isSaving={isSaving}\n              originalProfiles={originalProfiles}\n            />\n          ) : (\n            <ResultsTableClassification\n              results={results}\n              onSave={handleSaveCandidates}\n              isSaving={isSaving}\n              originalProfiles={originalProfiles}\n            />\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default BatchUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}